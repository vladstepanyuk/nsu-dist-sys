services:

# ===============================================================
# manager

  manager:
    container_name: manager
    image: manager:latest
    restart: always
    volumes:
      - ./configs:/etc/manager/configs:ro
    environment:
      - MANAGER_PORT=12345
      - MANAGER_MONGO_CONNSTR=mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      - MANAGER_MONGO_DBNAME=CrackHash
      - MANAGER_RABBITMQ_URI=amqp://rmuser:rmpassword@rabbitmq:5672/crackHash

    ports:
      - "12345:12345"
    networks:
      - crack-hash-network
    depends_on:
      - rabbitmq

# ===============================================================
# workers

  worker:
    image: worker:latest
    restart: always
    volumes:
      - ./configs:/etc/worker/configs:ro
    environment:
      - WORKER_RABBITMQ_URI=amqp://rmuser:rmpassword@rabbitmq:5672/crackHash
    deploy:
      mode: replicated
      replicas: 4
    networks:
      - crack-hash-network
    depends_on:
      - rabbitmq

# ===============================================================
# mongodb

  # mongo1:
  #   image: mongo:7.0
  #   command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_DATABASE=CrackHash
  #   healthcheck:
  #     test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
  #     interval: 5s
  #     timeout: 30s
  #     start_period: 0s
  #     retries: 30
  #   volumes:
  #     - "mongo1_data:/data/db"
  #     - "mongo1_config:/data/configdb"

  # mongo2:
  #    image: mongo:7.0
  #    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27018" ]
  #    ports:
  #      - "27018:27018"
  #    environment:
  #      - MONGO_INITDB_DATABASE=CrackHash
  #    volumes:
  #      - "mongo2_data:/data/db"
  #      - "mongo2_config:/data/configdb"

  # mongo3:
  #   image: mongo:7.0
  #   command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
  #   ports:
  #     - "27019:27019"
  #   environment:
  #     - MONGO_INITDB_DATABASE=CrackHash
  #   volumes:
  #     - "mongo3_data:/data/db"
  #     - "mongo3_config:/data/configdb"

# ===============================================================
# rabitmq

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_DEFAULT_VHOST=crackHash
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 20s
      retries: 5
    networks:
      - crack-hash-network


volumes:
  rabbitmq_data:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:

networks:
  crack-hash-network:
    driver: bridge